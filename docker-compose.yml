version: "3.1"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: dddecaf/warehouse:${IMAGE_TAG:-latest}
    networks:
      default:
      DD-DeCaF:
        aliases:
          - warehouse
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ".:/app"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - SCRIPT_NAME=${SCRIPT_NAME}
      - FLASK_APP=src/warehouse/wsgi.py
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:4200}
      - SENTRY_DSN=${SENTRY_DSN}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB_NAME=postgres
      - POSTGRES_ENV_USERNAME=postgres
      - POSTGRES_ENV_PASS=
      - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME:-admin}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}
    command: ["/bin/sh","-c","FLASK_APP=src/warehouse/wsgi.py flask db upgrade && gunicorn -c gunicorn.py warehouse.wsgi:app"]
  postgres:
    image: postgres
    ports:
      - "${PG_PORT:-5432}:5432"
    volumes:
      - "warehouse:/var/lib/postgresql/data"
    networks:
      - default


# Additional services that the `web` service `depends_on` should usually only
# be on the default network and not exposed on the general network, i.e.,
# networks:
#   - default

volumes:
  warehouse:
    external: true
networks:
  DD-DeCaF:
    external: true
